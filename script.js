const data = {
  cyto: { class: "Root", meaning: "ржХрзЛрж╖", example: "Cytoplasm", explanation: "ржХрзЛрж╖рзЗрж░ ржЕржнрзНржпржирзНрждрж░рзАржг рждрж░рж▓ ржкржжрж╛рж░рзНрже" },
  bio: { class: "Prefix", meaning: "ржЬрзАржмржи", example: "Biology", explanation: "ржЬрзАржм ржУ ржЬрзАржмржирзЗрж░ ржЕржзрзНржпржпрж╝ржи" },
  logy: { class: "Suffix", meaning: "ржЕржзрзНржпржпрж╝ржи", example: "Biology", explanation: "ржХрзЛржирзЛ ржмрж┐рж╖рзЯрзЗрж░ ржмрж┐ржЬрзНржЮрж╛ржиржнрж┐рждрзНрждрж┐ржХ ржЕржзрзНржпржпрж╝ржи" },
  derm: { class: "Root", meaning: "рждрзНржмржХ", example: "Dermatology", explanation: "ржЪрж░рзНржо рж╕ржВржХрзНрж░рж╛ржирзНржд ржЪрж┐ржХрж┐рзОрж╕рж╛ ржмрж┐ржЬрзНржЮрж╛ржи" },
  auto: { class: "Prefix", meaning: "рж╕рзНржмржпрж╝ржВ", example: "Autotroph", explanation: "рж╕рзНржмржпрж╝ржВ ржЦрж╛ржжрзНржп рждрзИрж░рж┐ржХрж╛рж░рзА ржЬрзАржм" },
  cytoplasm: { class: "Organelle", meaning: "рж╕рж╛ржЗржЯрзЛржкрзНрж▓рж╛ржЬржо", example: "The cytoplasm fills the cell.", explanation: "ржХрзЛрж╖рзЗрж░ ржЕржнрзНржпржирзНрждрж░рзАржг рждрж░рж▓ ржкржжрж╛рж░рзНрже" },
  nucleus: { class: "Organelle", meaning: "ржХрзЗржирзНржжрзНрж░ржХ", example: "The nucleus controls cell activities.", explanation: "ржХрзЛрж╖рзЗрж░ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг ржХрзЗржирзНржжрзНрж░" },
  mitochondria: { class: "Organelle", meaning: "ржорж╛ржЗржЯрзЛржХржирзНржбрзНрж░рж┐ржпрж╝рж╛", example: "Mitochondria are the powerhouse of the cell.", explanation: "рж╢ржХрзНрждрж┐ ржЙрзОржкрж╛ржжржирзЗрж░ ржЕржЩрзНржЧрж╛ржирзБ" },
  chromosome: { class: "Structure", meaning: "ржХрзНрж░рзЛржорзЛржЬрзЛржо", example: "Humans have 46 chromosomes.", explanation: "ржЬрж┐ржи рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржХрж╛ржарж╛ржорзЛ" },
  gene: { class: "Unit", meaning: "ржЬрж┐ржи", example: "Genes determine our traits.", explanation: "ржмржВрж╢ржЧрждрж┐рж░ ржПржХржХ" },
  dna: { class: "Molecule", meaning: "ржбрж┐ржПржиржП", example: "DNA carries genetic information.", explanation: "ржЬрж┐ржиржЧржд рждржерзНржп ржзрж╛рж░ржгржХрж╛рж░рзА ржЕржгрзБ" },
  rna: { class: "Molecule", meaning: "ржЖрж░ржПржиржП", example: "RNA helps in protein synthesis.", explanation: "ржкрзНрж░рзЛржЯрж┐ржи рж╕ржВрж╢рзНрж▓рзЗрж╖рзЗ рж╕рж╣рж╛ржпрж╝ржХ ржЕржгрзБ" },
  enzyme: { class: "Protein", meaning: "ржПржиржЬрж╛ржЗржо", example: "Enzymes speed up chemical reactions.", explanation: "рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ ржмрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рждрж░рж╛ржирзНржмрж┐рждржХрж╛рж░рзА ржкрзНрж░рзЛржЯрж┐ржи" },
  cell: { class: "Basic Unit", meaning: "ржХрзЛрж╖", example: "All organisms are made of cells.", explanation: "ржЬрзАржмрзЗрж░ ржорзМрж▓рж┐ржХ ржПржХржХ" },
  tissue: { class: "Structure", meaning: "ржЯрж┐рж╕рзНржпрзБ", example: "Muscle tissue helps in movement.", explanation: "ржПржХржЗ рж░ржХржо ржХрзЛрж╖рзЗрж░ рж╕ржорж╖рзНржЯрж┐" },
  organ: { class: "System", meaning: "ржЕржЩрзНржЧ", example: "The heart is an organ.", explanation: "ржЯрж┐рж╕рзНржпрзБрж░ рж╕ржоржирзНржмржпрж╝рзЗ ржЧржарж┐ржд рж╢рж░рзАрж░рзЗрж░ ржЕржВрж╢" },
  photosynthesis: { class: "Process", meaning: "ржЬрзАржмрж╕ржВрж╢рзНрж▓рзЗрж╖ржг", example: "Photosynthesis occurs in leaves.", explanation: "ржЧрж╛ржЫрзЗрж░ ржЦрж╛ржжрзНржп рждрзИрж░рж┐рж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛" },
  respiration: { class: "Process", meaning: "рж╢рзНржмрж╕ржи", example: "Respiration provides energy.", explanation: "рж╢ржХрзНрждрж┐ ржЙрзОржкрж╛ржжржирзЗрж░ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛" },
  chlorophyll: { class: "Pigment", meaning: "ржХрзНрж▓рзЛрж░рзЛржлрж┐рж▓", example: "Chlorophyll makes leaves green.", explanation: "рж╕ржмрзБржЬ рж░ржЩрзЗрж░ рж░ржЮрзНржЬржХ ржкржжрж╛рж░рзНрже" },
  ecosystem: { class: "System", meaning: "ржмрж╛рж╕рзНрждрзБрждржирзНрждрзНрж░", example: "An ecosystem includes all organisms.", explanation: "ржЬрзАржм ржУ ржкрж░рж┐ржмрзЗрж╢рзЗрж░ рж╕ржорзНржкрж░рзНржХ" },
  habitat: { class: "Environment", meaning: "ржЖржмрж╛рж╕рж╕рзНржерж▓", example: "A forest is a habitat.", explanation: "ржЬрзАржмрзЗрж░ ржмрж╕ржмрж╛рж╕рзЗрж░ рж╕рзНржерж╛ржи" },
  adaptation: { class: "Trait", meaning: "ржЕржнрж┐ржпрзЛржЬржи", example: "Camels have adaptations for desert.", explanation: "ржкрж░рж┐ржмрзЗрж╢рзЗрж░ рж╕ржЩрзНржЧрзЗ ржЦрж╛ржк ржЦрж╛ржУржпрж╝рж╛ржирзЛрж░ ржмрзИрж╢рж┐рж╖рзНржЯрзНржп" },
  mutation: { class: "Change", meaning: "ржЬрж┐ржиржЧржд ржкрж░рж┐ржмрж░рзНрждржи", example: "Mutation can cause diseases.", explanation: "ржбрж┐ржПржиржП рждрзЗ рж╣ржарж╛рзО ржкрж░рж┐ржмрж░рзНрждржи" },
  evolution: { class: "Theory", meaning: "ржмрж┐ржмрж░рзНрждржи", example: "Humans evolved from primates.", explanation: "ржЬрзАржмрзЗрж░ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржкрж░рж┐ржмрж░рзНрждржи" },
  autotroph: { class: "Organism", meaning: "рж╕рзНржмржкрзЛрж╖рзА", example: "Plants are autotrophs.", explanation: "ржЖрж▓рзЛржХ ржмрж╛ рж░рж╛рж╕рж╛ржпрж╝ржирж┐ржХ рж╢ржХрзНрждрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЦрж╛ржжрзНржп рждрзИрж░рж┐ ржХрж░рзЗ" },
  heterotroph: { class: "Organism", meaning: "ржкрж░ржкрзЛрж╖рзА", example: "Animals are heterotrophs.", explanation: "ржЕржирзНржп ржЬрзАржмрзЗрж░ ржЙржкрж░ ржирж┐рж░рзНржнрж░ ржХрж░рзЗ ржЦрж╛ржжрзНржп ржЧрзНрж░рж╣ржгржХрж╛рж░рзА ржЬрзАржм" }
};

const input = document.getElementById("searchInput");
const resultDiv = document.getElementById("result");

input.addEventListener("input", () => {
  const query = input.value.trim().toLowerCase();
  resultDiv.innerHTML = "";

  if (!query) return;

  const results = Object.entries(data).filter(([key]) => key.includes(query));

  if (results.length > 0) {
    resultDiv.innerHTML = results.map(([key, word]) => `
      <div class="card">
        <div class="word">ЁЯФН ${key}</div>
        <div><span class="label">ЁЯУЪ Class:</span> ${word.class}</div>
        <div><span class="label">ЁЯФд Meaning:</span> ${word.meaning}</div>
        <div><span class="label">ЁЯзк Example:</span> ${word.example}</div>
        <div><span class="label">ЁЯУЦ Explanation:</span> ${word.explanation}</div>
      </div>
    `).join('');
  } else {
    resultDiv.innerHTML = `<div class="not-found">тЭМ рж╢ржмрзНржжржЯрж┐ ржЦрзБржБржЬрзЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐</div>`;
  }
});

// Handle popup
const addWordBtn = document.getElementById("addWordBtn");
const popupForm = document.getElementById("popupForm");
const cancelWord = document.getElementById("cancelWord");
const submitWord = document.getElementById("submitWord");

addWordBtn.onclick = () => {
  popupForm.style.display = "flex";
};

cancelWord.onclick = () => {
  popupForm.style.display = "none";
};

submitWord.onclick = () => {
  const word = document.getElementById("newWord").value.trim().toLowerCase();
  const wordClass = document.getElementById("newClass").value;
  const meaning = document.getElementById("newMeaning").value;
  const example = document.getElementById("newExample").value;
  const explanation = document.getElementById("newExplanation").value;

  if (word && wordClass && meaning && example && explanation) {
    data[word] = {
      class: wordClass,
      meaning: meaning,
      example: example,
      explanation: explanation
    };
    popupForm.style.display = "none";
    input.value = word;
    input.dispatchEvent(new Event('input'));
  } else {
    alert("рж╕ржм ржШрж░ ржкрзВрж░ржг ржХрж░рзБржи!");
  }
};
